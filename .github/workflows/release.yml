name: Release
on:
  release:
    types: [published]

jobs:
  build:
    name: 🔨 Build distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: 🏗 Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: 🏗 Install build dependencies
        run: |
          python -m pip install wheel octoprint --user
      - name: 🔨 Build a source zip
        run: |
          python setup.py sdist --formats=zip
      - name: 🚚 rename to sdist.zip
        run: |
          mv dist/OctoPrint-CameraStreamerControl*.zip dist/sdist.zip
      - name: ⬆ Upload build result
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  upload-asset:
    name: 📦 Upload asset to release
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: ⬇ Download build result
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: 🚚 Rename to release.zip
        run: |
          cp dist/sdist.zip release.zip
      - name: 🥅 Catch release ID
        id: get_release
        uses: bruceadams/get-release@v1.3.2
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: 📦 Attach release artifact
        uses: actions/upload-release-asset@v1  # TODO this action is archived & unmaintained
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: release.zip
          asset_name: release.zip
          asset_content_type: application/zip
